#include <iostream>
#include <string>
#include <cstdlib>
#include <ctime>
using namespace std;

template <typename T>
class Node {
public:
    T data;
    Node* next;

    Node(T value) {
        data = value;
        next = nullptr;
    }
};

template <typename T>
class CircularLinkedList {
private:
    Node<T>* head;
    Node<T>* currentNode;

public:
    CircularLinkedList() {
        head = nullptr;
        currentNode = nullptr;
    }

    void append(T value) {
        Node<T>* newNode = new Node<T>(value);
        if (!head) {
            head = newNode;
            head->next = head; 
            currentNode = head;
        } else {
            Node<T>* temp = head;
            while (temp->next != head) { 
                temp = temp->next;
            }
            temp->next = newNode;
            newNode->next = head; 
        }
    }

    void step() {
        if (currentNode != nullptr) {
            currentNode = currentNode->next;
        }
    }

    T getCurrent() {
        if (currentNode != nullptr) {
            return currentNode->data;
        }
        return T();  
    }

    void rollDice() {
        int rollTotal = (rand() % 6 + 1) + (rand() % 6 + 1);
        cout << "Rolled a total of " << rollTotal << endl;

        for (int i = 0; i < rollTotal; i++) {
            step();
        }
    }
};

int main() {
    srand(time(0));

    CircularLinkedList<string> monopolyBoard;

    monopolyBoard.append("Go");
    monopolyBoard.append("Mediterranean Avenue");
    monopolyBoard.append("Community Chest");
    monopolyBoard.append("Baltic Avenue");
    monopolyBoard.append("Income Tax");
    monopolyBoard.append("Reading Railroad");
    monopolyBoard.append("Oriental Avenue");
    monopolyBoard.append("Chance");
    monopolyBoard.append("Vermont Avenue");
    monopolyBoard.append("Connecticut Avenue");
    monopolyBoard.append("Jail (Just Visiting)");
    monopolyBoard.append("St. Charles Place");
    monopolyBoard.append("Electric Company");
    monopolyBoard.append("States Avenue");
    monopolyBoard.append("Virginia Avenue");
    monopolyBoard.append("Pennsylvania Railroad");
    monopolyBoard.append("St. James Place");
    monopolyBoard.append("Community Chest");
    monopolyBoard.append("Tennessee Avenue");
    monopolyBoard.append("New York Avenue");
    monopolyBoard.append("Free Parking");
    monopolyBoard.append("Kentucky Avenue");
    monopolyBoard.append("Chance");
    monopolyBoard.append("Indiana Avenue");
    monopolyBoard.append("Illinois Avenue");
    monopolyBoard.append("B&O Railroad");
    monopolyBoard.append("Atlantic Avenue");
    monopolyBoard.append("Ventnor Avenue");
    monopolyBoard.append("Water Works");
    monopolyBoard.append("Marvin Gardens");
    monopolyBoard.append("Go to Jail");
    monopolyBoard.append("Pacific Avenue");
    monopolyBoard.append("North Carolina Avenue");
    monopolyBoard.append("Community Chest");
    monopolyBoard.append("Pennsylvania Avenue");
    monopolyBoard.append("Short Line Railroad");
    monopolyBoard.append("Chance");
    monopolyBoard.append("Park Place");
    monopolyBoard.append("Luxury Tax");
    monopolyBoard.append("Boardwalk");

    cout << "Starting at: " << monopolyBoard.getCurrent() << endl; 
    monopolyBoard.rollDice(); 
    cout << "Current space after roll: " << monopolyBoard.getCurrent() << endl;

    return 0;
}

//Results

Starting at: Go
Rolled a total of 8
Current space after roll: Vermont Avenue
